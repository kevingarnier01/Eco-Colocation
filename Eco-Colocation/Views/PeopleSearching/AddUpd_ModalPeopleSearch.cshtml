@model Eco_Colocation.ViewModel.AllViewModel
@{
	ViewBag.operation = @ViewData["operation"];
	ViewBag.Title = "AddUpd_ModalPeopleSearch";

	if (Model.PeopleSearchingVM == null)
		Model.PeopleSearchingVM = new Eco_Colocation.ViewModel.PeopleSearchingViewModel(true);

	Model.PeopleSearchingVM.InitLst();

	ViewBag.ModalState = @ViewData["ModalState"];
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "addUpdPeopleSearchForm" }))
{
	<div class="underModal col-sm-12 col-xs-12">
		<div id="addUpd_ModalPeopleSearch" class="reelModal">
			@if (!User.Identity.IsAuthenticated)
			{
				if (ViewBag.operation == "Subscribe")
				{
					<h2 class="title centerText">Publier vos intérêts de recherche en vous inscrivant</h2>
				}
				else if (ViewBag.operation == "Update")
				{
					<h2 class="title centerText">Modifier mon annonce de recherche d'éco-colocation</h2>
					<div class="flex">
						<a href="@Url.Action("", "", null)" class="btnGreen flex childFlex" id="btnDisableProfilInterested">Désactiver mon intérêt de recherche</a>
					</div>
				}
				else
				{
					<h2 class="title centerText">Ajouter mon annonce de recherche d'éco-colocation</h2>
				}
			}
			else
			{
				if (ViewBag.operation == "Update")
				{
					<h2 class="title centerText">Modifier mon annonce de recherche d'éco-colocation</h2>
					<div class="flex">
						<a href="@Url.Action("", "", null)" class="btnGreen flex childFlex" id="btnDisableProfilInterested">Désactiver mon intérêt de recherche</a>
					</div>
				}
				else
				{
					<h2 class="title centerText">Ajouter mon annonce de recherche d'éco-colocation</h2>
				}
			}
			<div class="divEncadrer-mcar">
				<div class="encadrer-mcar col-sm-11 col-xs-12">
					<div class="col-sm-4 divLeftSideEncadrer-mcar divImgLogo-mcar">
						<div class="divImgLogoHorizontal-mcar">
							<div class="divImgLogoVertical-mcar">
								<i class="fas fa-search icon-ca"></i>
							</div>
						</div>
					</div>
					<div class="col-sm-8 divRightSideEncadrer-mcar">
						<div class="flex">
							<div class="childFlex">
								@Html.ValidationMessageFor(m => m.PeopleSearchingVM.ResearchRoommateBo.MaxBudget)
								@Html.ValidationMessageFor(m => m.PeopleSearchingVM.PlaceBo.ScopeResearch)
								@Html.ValidationMessageFor(m => m.PeopleSearchingVM.LstPlaceBo)
							</div>
						</div>
						<div class="col-sm-12">
							<div id="divBudgMax-mcar" class="col-sm-4">
								<label class="lbl-mcar">Budget maximum&nbsp;*</label>
							</div>
							<div id="divInputBudgMax" class="col-sm-7">
								@Html.TextBoxFor(m => m.PeopleSearchingVM.ResearchRoommateBo.MaxBudget, new
								   {
									   @placeholder = "Entrez le buget max",
									   @type = "number",
									   @class = "input-mcar"
								   })
								<div class="lineinput-mcar"></div>
								<div id="euroSignBudgetMax-mcar">€</div>
							</div>
						</div>
						<div class="col-sm-12">
							<div id="div10-2-adresseLog-ca" style="position:relative" class="fontFamilyNote">
								<div class="divResearchLocation flex" id="divResearchLocation-mps">
									<div class="flex">
										<div class="childFlex">
											@Html.DropDownListFor(m => m.PeopleSearchingVM.PlaceBo.ScopeResearch,
												 new SelectList(Model.PeopleSearchingVM.ScopeResearchLst, "Value", "Text", null), new
												 {
													 @id = "typeResearchSct-car",
													 @class = "form-control typeResearchSct",
													 @onchange = "typeOfResearchLocation(this, '#inputSearchPlace-car', '#inputSearchPlace-car', 'car');" +
																 "addValueToHiddenElement(this, '#hiddenTypeResearchSct-car')"
												 })
											@Html.HiddenFor(m => m.PeopleSearchingVM.PlaceBo.ScopeResearch, new { @id = "hiddenTypeResearchSct-car" })
										</div>
									</div>
									<input id="inputSearchPlace-car" oninput="addr_searchCity(this, 'inputJsonDataPlace-mps');checkToDisableLstOrNot(this, '#typeResearchSct-car')" type="text"
										   class="form-control inputSearchPlace" placeholder="Veuillez indiquer la commune concernée&nbsp;*" />
									<div class="divInputPlaceHidden displayNone">
										@* Dans ce div la function jquery saveValueSelected va recreer d'autre html helper pour chaque nouvelle localisation *@
										@* Ce Html Helper à l'index -1 est donc le modèle html reférent*@
										<div class="divInputJsonDataPlace" id="divInputJsonDataPlace-mps">
											@Html.TextBoxFor(m => Model.PeopleSearchingVM.LstPlaceBoReferent[-1].JsonDataPlace, new { @type = "hidden", @class = "hiddenInpJsonDataPlace" })
											@for (int i = 0; i < Model.PeopleSearchingVM.LstPlaceBo?.Count; i++)
											{
												@Html.TextBoxFor(m => Model.PeopleSearchingVM.LstPlaceBo[i].JsonDataPlace, new { @type = "hidden", @id = "inputPlaceHidden" + Model.PeopleSearchingVM.LstPlaceBo[i].IdPlace, @class = "inputPlaceHidden" })
											}
										</div>
										<div class="divInputFullPlaceName">
											@Html.TextBoxFor(m => Model.PeopleSearchingVM.LstPlaceBoReferent[-1].FullPlaceName, new { @type = "hidden", @class = "hiddenInpFullPlaceName" })
											@for (int i = 0; i < Model.PeopleSearchingVM.LstPlaceBo?.Count; i++)
											{
												@Html.TextBoxFor(m => Model.PeopleSearchingVM.LstPlaceBo[i].FullPlaceName, new { @type = "hidden", @id = "inputPlaceHidden" + Model.PeopleSearchingVM.LstPlaceBo[i].IdPlace, @class = "inputPlaceHidden" })
											}
										</div>
										<div class="divInputPlaceId">
											@Html.TextBoxFor(m => Model.PeopleSearchingVM.LstPlaceBoReferent[-1].IdPlace, new { @type = "hidden", @class = "hiddenInpPlaceId" })
											@for (int i = 0; i < Model.PeopleSearchingVM.LstPlaceBo?.Count; i++)
											{
												@Html.TextBoxFor(m => Model.PeopleSearchingVM.LstPlaceBo[i].IdPlace, new { @type = "hidden", @id = "inputPlaceHidden" + Model.PeopleSearchingVM.LstPlaceBo[i].IdPlace, @class = "inputPlaceHidden" })
											}
										</div>
									</div>
								</div>
								@*<input id="inputSearchPlace-mpcHidden" name="inputSearchPlace-mpcHidden" type="hidden">*@
								<div class="listAutoCompleteToModal"></div>

								@if (Model.PeopleSearchingVM.LstPlaceBo != null && Model.PeopleSearchingVM.LstPlaceBo?.Count != 0)
								{
									<div class="divInputPlaceVisible-car">
										<div id="placeSaved-car" class="placeSaved" style="display:block">
											<div id="place-car" class="place">
												@for (int i = 0; i < Model.PeopleSearchingVM.LstPlaceBo?.Count; i++)
												{
													<div id="placecar-@Model.PeopleSearchingVM.LstPlaceBo[i].IdPlace" class="divPlace">
														@*<p class="placeName" title="Rennes 35, Ille-et-Vilaine, Bretagne">Rennes 35, Ille-et-Vilaine, Bretagne</p>*@
														@Html.TextBoxFor(m => m.PeopleSearchingVM.LstPlaceBo[i].FullPlaceName, new { @title = "{0}", @class = "placeName" })
														<div class="crossPlace">
															<i onclick="deletePlace('placecar-@Model.PeopleSearchingVM.LstPlaceBo[i].IdPlace','car','@Model.PeopleSearchingVM.LstPlaceBo[i].IdPlace','#inputSearchPlace-car')" class="fas fa-times crossPlace"></i>
														</div>
													</div>
												}
											</div>
										</div>
									</div>
								}
								else
								{
									<div id="placeSaved-car" class="placeSaved">
										<div id="place-car" class="place">
										</div>
									</div>
								}

								<div id="div10-3-adresseLog-ca" class="flex col-sm-12">
									<div id="div10-4-adresseLog-ca" class="col-sm-2"></div>
									<i class="fas fa-info" id="iconPlace-ca"></i>
									<p class="col-sm-12 autoMargin">Il vous est possible d'indiquer plusieurs lieux concernant votre projet de création d'éco-colocation</p>
								</div>
							</div>
						</div>
						<div class="col-sm-12">
							<p id="txtAlertEmail-car">Voulez-vous être alerté par mail des nouvelles annonces qui respectent vos critères de recherche ?</p>
							<div class="flex">
								<div class="childFlex">
									<p class="onoff">
										@Html.TextBoxFor(m => m.PeopleSearchingVM.ResearchRoommateBo.EmailAlert, new { type = "checkbox", @id = "email-car", @checked = "" })
										<label for="email-car"></label>
									</p>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div id="descTextAnnonceLocationDataPersonnal" class="flex col-sm-12 textInfoAdresse-ca">
				<div id="div10-4-adresseLog-ca" class="col-sm-2"></div>
				<i class="fas fa-info" id="iconPlace-ca"></i>
				<p class="fontFamilyNote col-sm-12 autoMargin">
					Toutes ces données ne seront pas visibles publiquement, seulement votre prénom, votre âge et l'activité apparaîtra sur votre profil.
				</p>
			</div>
			@if (!User.Identity.IsAuthenticated)
			{
				@Html.Partial("~/Views/Account/PersonalDataForm.cshtml", Model)
			}
			else
			{
				@Html.Partial("~/Views/Account/PersonalDataForm.cshtml", Model)
				<div id="divMethodToBeContact-car"></div>
			}
			<div class="divEncadrer-mcar" id="divDesciptionInfo-mcar">
				<div class="encadrer-mcar col-sm-11 col-xs-12">
					<div class="col-sm-4 col-xs-12 divImgLogo-mcar">
						<div class="divImgLogoHorizontal-mcar">
							<div class="divImgLogoVertical-mcar">
								<i class="fas fa-pencil-alt icon-ca"></i>
							</div>
						</div>
					</div>
					<div class="col-sm-8 col-xs-12" id="divGlobalPresent-mcar">
						<div class="flex">
							<div class="childFlex">
								@Html.ValidationMessageFor(m => m.AccountVM.UserBo.PersonBo.PersonnalityDescription)
								@Html.ValidationMessageFor(m => m.PeopleSearchingVM.ResearchRoommateBo.SearchCriteria)
								@Html.ValidationMessageFor(m => m.PeopleSearchingVM.ResearchRoommateBo.EcoPractice)
							</div>
						</div>
						<div class="col-sm-12" id="divDesciptionInfo2-mcar">
							<label class="lbl-mcar">Présentation de votre personnalité&nbsp;*</label>
							@Html.TextAreaFor(m => m.AccountVM.UserBo.PersonBo.PersonnalityDescription, new
							   {
								   @class = "txtareaDesc-mcar input-mcar",
								   @id = "txtareaPersoP-mcar",
								   @placeholder = "Présentez-vous en quelque ligne..."
							   })

						</div>
						<div class="col-sm-12" id="divCritereRecherche-mcar">
							<label class="lbl-mcar" id="lblCritereRecherche-mcar">Information sur vos critères de recherche&nbsp;*</label>
							@Html.TextAreaFor(m => m.PeopleSearchingVM.ResearchRoommateBo.SearchCriteria, new
							   {
								   @class = "txtareaDesc-mcar input-mcar",
								   @placeholder = "Présenter le type d'éco-colocation recherché..."
							   })

							@Html.TextAreaFor(m => m.PeopleSearchingVM.ResearchRoommateBo.EcoPractice, new
							   {
								   @class = "txtareaDesc-mcar input-mcar",
								   @placeholder = "Présenter les pratiques écologiques envisagées..."
							   })
						</div>
					</div>
				</div>
			</div>
			<div class="divEncadrer-mcar">
				<div class="encadrer-mcar col-sm-11 col-xs-12">
					<div class="col-sm-4 divLeftSideEncadrer-mcar divImgLogo-mcar">
						<div class="divImgLogoHorizontal-mcar">
							<div class="divImgLogoVertical-mcar">
								<i class="fas fa-camera-retro icon-ca"></i>
							</div>
						</div>
					</div>
					<div class="col-sm-8 divRightSideEncadrer-mcar">
						<div id="divGlobalMsgPhoto-mcar">
							<i class="fas fa-info" id="iconMsgPhoto-mcar"></i>
							<div>
								<p>Les profils accompagnées d'une photo sont 7 fois plus consultés que les autres.</p>
							</div>
						</div>
						<div class="flex">
							<div class="childFlex">
								@Html.ValidationMessageFor(m => m.PeopleSearchingVM.ResearchRoommateBo.PictureName)
							</div>
						</div>
						<div id="divGlobalBtnUplFile-mcar">
							<label id="btnUplFile-mcar" for="file-upload">Ajouter une photo de vous</label>
							@Html.TextBoxFor(m => m.PeopleSearchingVM.ResearchRoommateBo.PictureName, new
							   {
								   @id = "file-upload",
								   @type = "file",
								   @class = "filePicture-mcar",
								   @onchange = "showfile('divResultFilesUpl-mcar')"
							   })
						</div>
					</div>
				</div>
			</div>
			<div id="divGlobalResultFilesUpl-mcar">
				<div class="childFlex">
					<ul id="divResultFilesUpl-mcar" class='all-slides'>
						@*Html généré par javascript dans la fonction showMultiplesFilesUpload()*@
					</ul>
				</div>
			</div>
			@if (ViewBag.operation == "Update")
			{
				<div class="flex">
					<input type="submit" name="action:Valid_Update" class="childFlex btnGreen" value="Mettre à jour" />
				</div>
			}
			@if (!User.Identity.IsAuthenticated)
			{
				if (ViewBag.operation == "Subscribe")
				{
					@Html.Partial("~/Views/Account/PasswordDiv.cshtml", Model)
					<div class="flex" id="divInscriptionButtons-mcar">
						@*<input type="submit" name="action:Valid_AddAndSubscribe" class="childFlex btnGreen" value="Publier et m'inscrire" />*@
						<input type="submit" data-url-jquerySubmit="/PeopleSearching/Valid_AddAndSubscribe" class="childFlex btnGreen" value="Publier et m'inscrire" />
					</div>
				}
				else if (ViewBag.operation != "Update")
				{
					<div id="divInscriptionButtons-mcar">
						@Html.Partial("~/Views/Account/ButtonsCreateAccount.cshtml", Model)
					</div>
				}
			}
			else
			{
				if (ViewBag.operation != "Update")
				{
					<div class="flex" id="divInscriptionButtons-mcar">
						<input type="submit" name="action:Valid_Add" class="childFlex btnGreen" value="Ajouter mon annonce" />
					</div>
				}
			}
		</div>
		<div class="divCloseModal">
			<a href="#close-modal" rel="modal:close" onclick="autoCompletePrepend()"><i class="fas fa-times close-modal"></i></a>
		</div>
	</div>
}
<script type="text/javascript">
	initSlidepicture();
	showDivCritereRecherche();
	initButtonOnOff();

	$('#descTextAnnonceLocationDataPersonnal').detach().prependTo('#extraElement-pdf');

	if ($("#divMethodToBeContact-car").length != 0) {
		$("#divPersonnaliteInfo-mcar").remove();
	}

	var operation = "@ViewData["operation"]";
	if (operation == "Update") {
		window.history.replaceState('data to be passed', 'Title of the page',
				'/Modal/AddUpd_ModalPeopleSearchUpdate/?idModal=' + @ViewData["idModal"] + "&targetCity=" + "@ViewData["targetCity"]");
	} else {
		window.history.replaceState('data to be passed', 'Title of the page',
			"/Modal/AddUpd_ModalPeopleSearch?urlCurrentPage=" + $('#urlCurrentPage').val());
	}

	if (operation == "") {
		addInputActionToConnectionButton()
	}

	triggerSubmitForm("#addUpdPeopleSearchForm");

	//Quand le modalstate n'est pas valide
	if ("@ViewBag.ModalState" == "False") {
		initTypeResearchSct();
	}
</script>