@model  Eco_Colocation.ViewModel.AllViewModel
@{
	ViewBag.Title = "_PictureHeader";
}
<div class="parallax-window" data-parallax="scroll" data-image-src="http://www.ecocolocs.fr/bundles/app/images/image1.png">
	@using (Html.BeginForm("TypeRecherche", "Home"))
	{
		<div id="switcher-wrapper">
			<div id="divGlobal1-sw">
				<div id="divGlobal2-sw">
					<div id="sous-switcher-wrapper">
						<input id="btnCherche" type="button" value="Je recherche une éco-colocation" onclick="selectSwitcher(this);">
						<input id="btnProposition" type="button" value="Je propose une éco-colocation" onclick="selectSwitcher(this);">
					</div>
					@Html.HiddenFor(m => Model.HomeViewModel.TypeRecherche, new { @id = "typeRecherche" })
					<div class="input-group" id="adv-search">
						<input id="inputSearchPlace" @*oninput="addr_search('inputSearchPlace','listAutoCompletePlace');"*@ list="listAutoCompletePlace" autocomplete="off" type="text" class="form-control" placeholder="Saisir un lieu. Ex: Ville, Département, Région">
							<datalist id="listAutoCompletePlace"></datalist>
						@*<input type="search" id="address-input-ph" class="address-input inputSearchPlace" placeholder="Saisir un lieu. Ex: Ville, Département, Région" />*@
						<input id="listAutoCompletePlaceHidden" name="listAutoCompletePlaceHidden" type="hidden" value="">
						<div class="input-group-btn">
							<div id="divBtnFiltre" class="btn-group" role="group">
								<div id="div2BtnFiltre" class="dropdown dropdown-lg">
									<button id="btnSearch" type="submit" class="btn btn-primary">
										<p>Rechercher</p>
										<span class="glyphicon glyphicon-search" aria-hidden="true"></span>
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
</div>

<script type="text/javascript">
	$(document).ready(function () {
		initAutoComplete('#address-input-ph');


		//$("#adv-search").autocomplete({
		//	source: function (request, response) {
		//		$.ajax({
		//			url: "https://api-adresse.data.gouv.fr/search/?city=" + $("#adv-search").val(),
		//			data: { q: request.term },
		//			dataType: "json",
		//			success: function (data) {
		//				var cities = [];
		//				response($.map(data.features, function (item) {
		//					// Ici on est obligé d'ajouter les villes dans un array pour ne pas avoir plusieurs fois la même
		//					if ($.inArray(item.properties.postcode, cities) == -1) {
		//						cities.push(item.properties.postcode);
		//						return {
		//							label: item.properties.postcode + " - " + item.properties.city,
		//							postcode: item.properties.postcode,
		//							value: item.properties.city
		//						};
		//					}
		//				}));
		//			}
		//		});
		//	},
		//	// On remplit aussi le CP
		//	select: function (event, ui) {
		//		$('#cp').val(ui.item.postcode);
		//	}
		//});
	});
</script>